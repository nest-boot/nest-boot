name: Test

on: workflow_call

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      minio:
        image: bitnami/minio
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: password
        options: >-
          --name=minio 
          --health-cmd "curl http://localhost:9000/minio/health/live"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test:cov
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_NAME: postgres
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          STORAGE_ENDPOINT: localhost
          STORAGE_PORT: 9000
          STORAGE_USE_SSL: false
          STORAGE_ACCESS_KEY_ID: minio
          STORAGE_SECRET_KEY: password
          STORAGE_BUCKET: test-bucket
          STORAGE_PATH_STYLE: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
